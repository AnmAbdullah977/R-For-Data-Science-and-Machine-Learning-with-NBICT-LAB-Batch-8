5+6
a = 11
b = 7.19
class(a)
class(b)
class(b)
name = 'Abdullah'
print(name)
class(name)
c = '52'
print(c + 9)
print(a + 9)
# Logical Data Type - TRUE, FALSE (T, F)
a > b
# Logical Data Type - TRUE, FALSE (T, F)
class(a > b)
print(a < b)
x = 19
y = 22-3
print(x == y)
print(x != y)
print(y > x)
print(y >= x)
# Logical Operator in R
4 == 4 && 5 == 5
T && T
F && T
T && F
# Logical Operator in R
# && LOGICAL OPERATOR
# || LOGICAL OPERATOR
x !=y || x ==y
T || F
T || T
F || F
# SIMPLE MATHMATICAL OPERTOTS IN R
z = 6 + 9 - 8 * 2 / 3
print(z)
# SIMPLE MATHMATICAL OPERTOTS IN R
z = 6 + 9 - 8 * (2 / 3)
w = 4 + 3 - 3 * 2 / 3
print(w)
y = 4^2
print(y)
11 / 5
11 %% 5
11 %/% 5
# Data Types in R
# 1. Numeric - Integer / Floating
# 2. String/character - Abdullah
# 3. Logical
a = 11
b = 7.19
class(a)
class(b)
name = 'Abdullah'
print(name)
class(name)
c = '52'
# print(c + 9)
print(a + 9)
# Logical Data Type - TRUE, FALSE (T, F)
class(a > b)
print(a < b)
x = 19
y = 22-3
print(x == y)
print(x != y)
print(y >= x)
# Logical Operator in R
# && LOGICAL OPERATOR
# || LOGICAL OPERATOR
x != y || x == y
# SIMPLE MATHMATICAL OPERTOTS IN R
z = 6 + 9 - 8 * (2 / 3)
print(z)
w = 4 + 3 - 3 * 2 / 3
print(w)
y = 4^2
print(y)
11 / 5
11 %/% 5
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x
z = x/2
setwd("~/GitHub/R-For-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-5-Vectors in R")
#Vectors in R
# Creating a vector using c() command
student.height = c(60, 69, 55, 62)
student.height
# checking the class of the vector student.height
is.numeric(student.height)
is.logical(student.height)
b = c(5, 8, 2, "sv")
b
is.numeric(b)
is.character(b)
# we can convert data types
# For example from numeric to character
a <- c(1,2,3,4,5)
class(a)
as. character(a)
# we can convert data types
# For example from numeric to character
a <- c(1,2,3,4,5)
class(a)
is.numeric(a)
a = as.character(a)
a
class(a)
# Logical operator true or false when converted
# to numeri, True converts to 1`
# and false coverts to 0
d = c(TRUE, FALSE, TRUE,FALSE)`
d = as.numeric(d)
d
class(d)
e = c(1, 0, 0, 1, 23, -7, 0)
e = as.logical(e)
e
e
# Creating sequential vector
my_seq = c(1:10)
my_seq
# Creating sequential vector
my_seq = c(1:100)
# Creating sequential vector
my_seq = c(1:100)
my_seq
class(a)
a = as.character(a)
# Creating sequential vector
my_seq = c(1:50, 80 99, 88, 60, 77, 61, 92, 97)
my_seq
# Creating sequential vector
new_seq = c(seq(1,10))
new_seq = c(seq(1,10))
new_seq = c(seq(1,10 by=3))
names = c("Elias")
#Vectors in R
# Creating a vector using c() command
student.height = c(60, 69, 55, 62)
student.height
# checking the class of the vector student.height
is.numeric(student.height)
is.logical(student.height)
# R automatically converts numeric to text,
# when you have a text item in the vector
b = c(5, 8, 2, "sv")
b
is.numeric(b)
is.character(b)
# we can convert data types
# For example from numeric to character
a <- c(1,2,3,4,5)
class(a)
is.numeric(a)
a = as.character(a)
a
class(a)
# Logical operator true or false when converted
# to numeri, True converts to 1`
# vectors can have character
names = c("Elias")
new_seq = c(seq(1,10 by=3))
class(d)
# vectors can have character
names = c("Elias")
