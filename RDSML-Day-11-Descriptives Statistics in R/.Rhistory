5+6
a = 11
b = 7.19
class(a)
class(b)
class(b)
name = 'Abdullah'
print(name)
class(name)
c = '52'
print(c + 9)
print(a + 9)
# Logical Data Type - TRUE, FALSE (T, F)
a > b
# Logical Data Type - TRUE, FALSE (T, F)
class(a > b)
print(a < b)
x = 19
y = 22-3
print(x == y)
print(x != y)
print(y > x)
print(y >= x)
# Logical Operator in R
4 == 4 && 5 == 5
T && T
F && T
T && F
# Logical Operator in R
# && LOGICAL OPERATOR
# || LOGICAL OPERATOR
x !=y || x ==y
T || F
T || T
F || F
# SIMPLE MATHMATICAL OPERTOTS IN R
z = 6 + 9 - 8 * 2 / 3
print(z)
# SIMPLE MATHMATICAL OPERTOTS IN R
z = 6 + 9 - 8 * (2 / 3)
w = 4 + 3 - 3 * 2 / 3
print(w)
y = 4^2
print(y)
11 / 5
11 %% 5
11 %/% 5
# Data Types in R
# 1. Numeric - Integer / Floating
# 2. String/character - Abdullah
# 3. Logical
a = 11
b = 7.19
class(a)
class(b)
name = 'Abdullah'
print(name)
class(name)
c = '52'
# print(c + 9)
print(a + 9)
# Logical Data Type - TRUE, FALSE (T, F)
class(a > b)
print(a < b)
x = 19
y = 22-3
print(x == y)
print(x != y)
print(y >= x)
# Logical Operator in R
# && LOGICAL OPERATOR
# || LOGICAL OPERATOR
x != y || x == y
# SIMPLE MATHMATICAL OPERTOTS IN R
z = 6 + 9 - 8 * (2 / 3)
print(z)
w = 4 + 3 - 3 * 2 / 3
print(w)
y = 4^2
print(y)
11 / 5
11 %/% 5
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x
z = x/2
setwd("~/GitHub/R-For-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-11-Descriptives Statistics in R")
# install.packages("ggplot2")
library(ggplot2)
# install.packages("ggplot2")
library(ggplot2)
# install.packages("ggplot2")
library(ggplot2)
installed.packages(ggplot2)
install.packages("ggplot2")
# install.packages("ggplot2")
library(ggplot2)
# install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
dataset = mtcars
# Generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
# Changing the point size and shape
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18)
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = 1m)
